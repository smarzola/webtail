name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v0.0.1
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            name: webtail-linux-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            name: webtail-linux-arm64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            name: webtail-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0'  # Matches your go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-X main.version=${{ github.ref_name }}" -o webtail .
          mkdir -p ${{ matrix.name }}
          mv webtail ${{ matrix.name }}/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create release archives
        run: |
          cd artifacts
          VERSION=${{ github.ref_name }}
          for dir in */; do
            if [ -d "$dir" ]; then
              tar -czf "${dir%/}-${VERSION}.tar.gz" -C "$dir" .
            fi
          done
          ls -la *.tar.gz

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}